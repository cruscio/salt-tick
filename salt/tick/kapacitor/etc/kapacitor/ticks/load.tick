// Parameters
var info_sig = 3
var warn_sig = 4
var crit_sig = 5

var period = 1m
var every = 1m

var suppress = 5m

var db = 'telegraf'
var rp = 'autogen'

var linux = stream
  |from()
    .database(db)
    .retentionPolicy(rp)
    .measurement('system')
    //.where(lambda: "team" != 'yellow' )
    .groupBy('host')
  |window()
    .period(period)
    .every(every)
  |max('load1')
    .as('stat')
  |eval(lambda: sigma("stat"))
    .as('sigma')
    .keep()

linux
  |log()
  |alert()
    .id('[kapacitor] {{ index .Tags "host"}}')
    .message('{{ .ID }} Load1 is {{ .Level }} value: {{ index .Fields "stat"}} Sigma: {{ index .Fields "sigma" }}')
    .info(lambda: "sigma" > info_sig)
    .warn(lambda: "sigma" > warn_sig)
    .crit(lambda: "sigma" > crit_sig)
    .alerta()
      .value('{{ index .Fields "stat" }}')
      .resource('{{ index .Tags "host"}}')
  |log()
