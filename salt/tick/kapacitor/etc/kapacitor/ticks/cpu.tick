// Parameters
var usage_info = 25
var usage_warn = 10
var usage_crit = 5

var period = 1m
var every = 1m

var suppress = 5m

var db = 'telegraf'
var rp = 'autogen'

var linux = stream
  |from()
    .database(db)
    .retentionPolicy(rp)
    .measurement('cpu')
    .where(lambda: "cpu" == 'cpu-total')
    //.where(lambda: "team" != 'yellow' )
    .groupBy('host')
  |window()
    .period(period)
    .every(every)
  |mean('usage_idle')
    .as('stat')

linux
  |alert()
    .id('[kapacitor] {{ index .Tags "host"}}')
    .message('{{ .ID }} CPU idle is {{ .Level }} value: {{ index .Fields "stat"}}')
    .info(lambda: "stat" < usage_info)
    .warn(lambda: "stat" < usage_warn)
    .crit(lambda: "stat" < usage_crit)
    .alerta()
      .value('{{ index .Fields "stat" }}')
      .resource('{{ index .Tags "host"}}')
  |log()
